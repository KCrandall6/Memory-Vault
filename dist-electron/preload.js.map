{"version":3,"file":"preload.js","sources":["../electron/preload.ts"],"sourcesContent":["// electron/preload.ts - for on-the-fly thumbnails\r\n\r\nimport { contextBridge, ipcRenderer } from 'electron'\r\n\r\n// Define TypeScript interfaces for ElectronAPI\r\ninterface ElectronAPI {\r\n  selectFiles: () => Promise<any[]>;\r\n  saveMedia: (data: any) => Promise<{ success: boolean; mediaId?: number; error?: string }>;\r\n  getThumbnail: (filePath: string) => Promise<{ thumbnailPath: string; thumbnailFileName: string } | null>;\r\n  getMediaTypes: () => Promise<any[]>;\r\n  getSourceTypes: () => Promise<any[]>;\r\n  getCollections: () => Promise<any[]>;\r\n  getTags: () => Promise<any[]>;\r\n  getPeople: () => Promise<any[]>;\r\n  onMainProcessMessage: (callback: (...args: any[]) => void) => void;\r\n}\r\n\r\n// Expose validated APIs to renderer process\r\ncontextBridge.exposeInMainWorld('electronAPI', {\r\n  // File operations\r\n  selectFiles: () => ipcRenderer.invoke('select-files'),\r\n  saveMedia: (data) => ipcRenderer.invoke('save-media', data),\r\n  getThumbnail: (filePath) => ipcRenderer.invoke('get-thumbnail', filePath),\r\n  \r\n  // Database operations\r\n  getMediaTypes: () => ipcRenderer.invoke('get-media-types'),\r\n  getSourceTypes: () => ipcRenderer.invoke('get-source-types'),\r\n  getCollections: () => ipcRenderer.invoke('get-collections'),\r\n  getTags: () => ipcRenderer.invoke('get-tags'),\r\n  getPeople: () => ipcRenderer.invoke('get-people'),\r\n  \r\n  // Event listeners\r\n  onMainProcessMessage: (callback) => {\r\n    ipcRenderer.on('main-process-message', (_event, ...args) => callback(...args));\r\n  }\r\n} as ElectronAPI)"],"names":[],"mappings":";AAkBA,cAAc,kBAAkB,eAAe;AAAA;AAAA,EAE7C,aAAa,MAAM,YAAY,OAAO,cAAc;AAAA,EACpD,WAAW,CAAC,SAAS,YAAY,OAAO,cAAc,IAAI;AAAA,EAC1D,cAAc,CAAC,aAAa,YAAY,OAAO,iBAAiB,QAAQ;AAAA;AAAA,EAGxE,eAAe,MAAM,YAAY,OAAO,iBAAiB;AAAA,EACzD,gBAAgB,MAAM,YAAY,OAAO,kBAAkB;AAAA,EAC3D,gBAAgB,MAAM,YAAY,OAAO,iBAAiB;AAAA,EAC1D,SAAS,MAAM,YAAY,OAAO,UAAU;AAAA,EAC5C,WAAW,MAAM,YAAY,OAAO,YAAY;AAAA;AAAA,EAGhD,sBAAsB,CAAC,aAAa;AACtB,gBAAA,GAAG,wBAAwB,CAAC,WAAW,SAAS,SAAS,GAAG,IAAI,CAAC;AAAA,EAAA;AAEjF,CAAgB;"}